{"version":3,"sources":["components/ColorPick.jsx","App.js","index.js"],"names":["customStyles","content","top","left","right","bottom","marginRight","transform","Pick","props","useState","modalIsOpen","setIsOpen","red","setRed","green","setGreen","blue","setBlue","value","hex","setHex","result","exec","closeModal","styles","height","width","background","hexToRgb","r","parseInt","g","b","roughScale","x","base","parsed","isNaN","convertToRGB","onChange","className","htmlFor","type","name","id","length","toString","substr","hexValid","e","target","onBlur","onClick","style","isOpen","onRequestClose","contentLabel","min","max","steps","disabled","Object","keys","colors","map","key","backgroundColor","App","yellow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82e84e19.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport './colorpic.css';\r\n\r\n\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '26%',\r\n    left: '55%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default function Pick(props) {\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [red, setRed] = useState(0);\r\n  const [green, setGreen] = useState(0);\r\n  const [blue, setBlue] = useState(0);\r\n  const [hex, setHex] = useState(props.value||\"000000\");\r\n\r\n\r\n  \r\n  //let hex= RGBToHex(roughScale(red, 10).toString(16), roughScale(green, 10).toString(16), roughScale(blue, 10).toString(16));\r\n  /*  const colors = ['ffff00', 'ff0000', '00ff00', '0000ff'];\r\n   const colorsItems = colors.map((colors) =>\r\n     <option value=\"\">{colors}</option>\r\n   ); */\r\n  \r\n\r\n\r\n  var result = /([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  var styles = {\r\n\r\n    height: 20,\r\n    width: 20,\r\n    background: 'rgb(' + red + ',' + green + ',' + blue + ')'\r\n  }\r\n\r\n  function hexToRgb(hex) {\r\n    // var result = /([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n      r: parseInt(result[1], 16),\r\n      g: parseInt(result[2], 16),\r\n      b: parseInt(result[3], 16)\r\n    } : null;\r\n  }\r\n\r\n  function RGBToHex(r, g, b) {\r\n    r = r.toString(16);\r\n    g = g.toString(16);\r\n    b = b.toString(16);\r\n\r\n    if (r.length === 1)\r\n      r = \"0\" + r;\r\n    if (g.length === 1)\r\n      g = \"0\" + g;\r\n    if (b.length === 1)\r\n      b = \"0\" + b;\r\n\r\n    return r + g + b;\r\n  }\r\n\r\n  function roughScale(x, base) {\r\n    const parsed = parseInt(x, base);\r\n    if (isNaN(parsed)) { return 0; }\r\n    return parsed;\r\n  }\r\n\r\n  function hexValid(hex) {\r\n    if (hex.length === 6) {\r\n      if (result) {\r\n        return hex.toString(16);\r\n      }\r\n      else return 0;\r\n    }\r\n    else {\r\n      return hex.toString(16).substr(0, 6);\r\n    }\r\n  }\r\n\r\n  function converToHex() {\r\n    setHex(RGBToHex(roughScale(red, 10).toString(16), roughScale(green, 10).toString(16), roughScale(blue, 10).toString(16)))\r\n    props.onChange();\r\n    closeModal();\r\n  }\r\n  function convertToRGB() {\r\n    setRed(hexToRgb(hex).r);\r\n    setGreen(hexToRgb(hex).g);\r\n    setBlue(hexToRgb(hex).b);\r\n    props.onChange();\r\n    closeModal();\r\n  }\r\n\r\n  function fastOperation(value) {\r\n    setHex(value);\r\n    convertToRGB();\r\n  }\r\n  return <div className=\"bg\">\r\n    <div className=\"container-input\">\r\n      <label htmlFor=\"input-hex\" className=\"hashtag\">#</label>\r\n      <input type=\"text\" name=\"input-hex\" id=\"\" className=\"inp-hex\"\r\n        value={hexValid(hex)}\r\n        onChange={e => setHex(e.target.value)}\r\n        onBlur={convertToRGB}\r\n      />\r\n      <div className=\"color-pick-box\" onClick={openModal}>\r\n        <div className=\"color-pick\" style={styles}></div>\r\n      </div>\r\n\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        <div className=\"sliders\">\r\n          <div className=\"red\">\r\n            <input id=\"red\" type=\"range\"\r\n              min=\"0\"\r\n              max=\"255\"\r\n              steps=\"1\"\r\n              value={red}\r\n              onChange={e => setRed(e.target.value)}\r\n              />\r\n            <label>Red: {red}</label>\r\n          </div>\r\n          <div className=\"green\">\r\n            <input id=\"green\" type=\"range\"\r\n              min=\"0\"\r\n              max=\"255\"\r\n              steps=\"1\"\r\n              value={green}\r\n              onChange={e => setGreen(e.target.value)} />\r\n            <label>Green: {green}</label>\r\n          </div>\r\n          <div className=\"blue\">\r\n            <input id=\"blue\" type=\"range\"\r\n              min=\"0\"\r\n              max=\"255\"\r\n              steps=\"1\"\r\n              value={blue}\r\n              onChange={e => setBlue(e.target.value)} />\r\n            <label>Blue: {blue}</label>\r\n          </div>\r\n        </div>\r\n        <div className=\"btns\">\r\n          <button className=\"btn btn-cancel\" onClick={convertToRGB}>Cancel</button>\r\n          <button className=\"btn btn-ok\" onClick={converToHex}>Ok</button>\r\n        </div>\r\n      </Modal>\r\n      <select className=\"inp-select\" onChange={e => fastOperation(e.target.value)}>\r\n        {/*  {colorsItems} */}\r\n         <option value=\"000001\" disabled></option>\r\n        {Object.keys(props.colors).map(key => <option value={props.colors[key]}\r\n          key={key}\r\n          style={{ backgroundColor: \"#\" + props.colors[key] }}\r\n        >{key}</option>)}\r\n\r\n      </select>\r\n    </div>\r\n\r\n   </div>\r\n}","/* import Cp from './components/ColorPicker' */\nimport Pick from './components/ColorPick'\nimport './App.css';\n\nfunction App() {\n  const colors = {\n    yellow: \"ffff00\",\n    red: \"ff0000\",\n    green: \"00ff00\",\n    blue: \"0000ff\"\n  }\n  return (\n    <div className=\"App\">\n      \n     <Pick value=\"555555\" onChange={()=>{return \"color has been changed\"}} colors={colors}></Pick>\n   \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}